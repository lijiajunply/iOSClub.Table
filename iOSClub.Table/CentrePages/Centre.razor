@page "/Centre"
@using iOSClub.Share
@using iOSClub.Share.Data
@using iOSClub.Table.Models
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<SignContext> DbFactory
@inject NavigationManager Nav

<PageTitle>个人中心 - 西建大iOS Club</PageTitle>

<meta name="referrer" content="never">

@* <Carousel> *@
@*     @foreach (var item in Events) *@
@*     { *@
@*         <CarouselSlick> *@
@*             <img alt="" src="@item.Cover" class="img-container"/> *@
@*         </CarouselSlick> *@
@*     } *@
@* </Carousel> *@

<PageView ContextStyle="padding: 10px;">
    <Extra>
        <Title Level="4">@DataString</Title>
    </Extra>
    <Context>
        <Title Level="2">我的项目</Title>
        @if (Staff != null)
        {
            @if (Staff.Projects.Count == 0)
            {
                <Empty Image="https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg" Style="padding: 20px">
                    <DescriptionTemplate>
                        <span>当前没有任何项目</span>
                    </DescriptionTemplate>
                </Empty>
            }
            else
            {
                <AntList Grid="grid" DataSource="@Staff.Projects">
                    <ListItem >
                        <Card Hoverable Style="border-radius: 10px;" BodyStyle="margin: 5px auto">
                            <Flex Vertical Align="flex-end" Justify="space-between" Style="height: 200px">
                                <div>
                                    <Flex Justify="space-between" Align="center">
                                        <Title Level="2">@context.Title</Title>
                                        <Tag OnClick="@(() => Nav.NavigateTo($"/Centre/Department/{context.DepartmentName}"))"
                                             Icon="apple" Color="blue-inverse">
                                            @SignRecord.DepartmentDictionary[context.DepartmentName]
                                        </Tag>
                                    </Flex>
                                    <Text Type="secondary">@($"{context.StartTime} - {context.EndTime}")</Text>
                                </div>

                                <Button Type="@ButtonType.Primary" OnClick="@(() => Nav.NavigateTo($"/Centre/Project/{context.Id}"))">
                                    去看看
                                </Button>
                            </Flex>
                        </Card>
                    </ListItem>
                </AntList>
            }
            <Divider/>
            <Title Level="2">我的任务</Title>
            @if (Staff.Tasks.Count == 0)
            {
                <Empty Image="https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg" Style="padding: 20px">
                    <DescriptionTemplate>
                        <span>当前没有任何项目</span>
                    </DescriptionTemplate>
                </Empty>
            }
            else
            {
                <AntList DataSource="@Staff.Tasks">
                    <ListItem>
                        <ListItemMeta>
                            <TitleTemplate>
                                <Space Align="center" Size="@("large")">
                                    <SpaceItem>
                                        <h1>@context.Title</h1>
                                    </SpaceItem>
                                    <SpaceItem>
                                        <Icon Type="team"/>
                                        @context.Users.Count.ToString()
                                    </SpaceItem>
                                </Space>
                            </TitleTemplate>
                            <DescriptionTemplate>
                                <Text Type="secondary">@($"{context.StartTime} - {context.EndTime}")</Text>
                                <Tag Color="@TaskColor(context)">@TaskString(context)</Tag>
                            </DescriptionTemplate>
                        </ListItemMeta>
                    </ListItem>
                </AntList>
            }

            <Divider/>
        }
        <Title Level="2">社团小工具</Title>
        @if (Tools.Count == 0)
        {
            <Empty Image="https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg" Style="padding: 20px">
                <DescriptionTemplate>
                    <span>社团目前还没有工具</span>
                </DescriptionTemplate>
            </Empty>
        }
        else
        {
            <AntList Grid="grid" DataSource="@Tools">
                <ListItem >
                    <Card Hoverable Style="border-radius: 10px;" BodyStyle="margin: 5px auto">
                        <Flex Vertical Justify="space-between" Align="flex-start" Style="height: 200px">
                            <div>
                                <Flex>
                                    <Image Src="@context.IconUrl"/>
                                    <Title Level="2">@context.Name</Title>
                                </Flex>
                                @foreach (var tag in context.Tag?.Split(",")!)
                                {
                                    <Tag Color="blue-inverse">@tag</Tag>
                                }
                            </div>

                            <Button Type="@ButtonType.Primary" OnClick="@(() => Nav.NavigateTo(context.Url))">
                                去看看
                            </Button>
                        </Flex>
                    </Card>
                </ListItem>
            </AntList>
        }
    </Context>
</PageView>

@code
{
    private static ListGridType grid => new()
    {
        Gutter = 16,
        Xs = 1,
        Sm = 2,
        Md = 3,
        Lg = 3,
        Xl = 3,
        Xxl = 3,
    };

    private List<ToolModel> Tools { get; set; } = [];

    //private EventModel[] Events { get; set; } = [];
    [CascadingParameter] private MemberModel Member { get; set; } = new();
    private StaffModel? Staff { get; set; }

    private string DataString { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await using var context = await DbFactory.CreateDbContextAsync();
        //Events = await context.Events.ToArrayAsync();
        Tools = await context.Tools.ToListAsync();
        Staff = await context.Staffs
            .Include(x => x.Projects)
            .Include(x => x.Tasks)
            .FirstOrDefaultAsync(x => x.UserId == Member.UserId);
        var now = DateTime.Now.Hour;
        DataString = now switch
        {
            >= 0 and < 6 => "夜深了，赶路人也要睡觉了",
            >= 6 and < 12 => "清晨的第一缕阳光，唤醒了大地的沉睡",
            >= 12 and < 18 => "午后的阳光洒在身上，让心情变得温暖",
            >= 18 and < 24 => "夜幕降临，星光闪烁",
            _ => "夕阳西下，余晖映照"
        };
    }

    private static string TaskColor(TaskModel task)
    {
        var today = DateTime.Today;
        var start = DateTime.Parse(task.StartTime);
        var end = DateTime.Parse(task.EndTime);
        if (today > end) return "red-inverse";
        if (start > today) return "blue-inverse";
        return task.Status ? "#87d068" : "#2db7f5";
    }

    private static string TaskString(TaskModel task)
    {
        var today = DateTime.Today;
        var start = DateTime.Parse(task.StartTime);
        var end = DateTime.Parse(task.EndTime);
        if (today > end) return "超时未完成";
        if (start > today) return "未开始";
        return task.Status ? "已完成" : "正在进行";
    }
}

<style>
    .img-container {
        position: relative;
        background-size: cover;
        width: 70vw;
        height: auto;
        background-position: center;
        left: 15%;
        right: 15%;
    }
</style>