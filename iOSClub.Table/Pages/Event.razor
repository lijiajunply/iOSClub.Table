@page "/Event"
@using iOSClub.Share.Data
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<SignContext> DbFactory

<PageTitle>社团活动</PageTitle>

<meta name="referrer" content="never">
<br/>
@for (var index = Models.Length - 1; index >= 0; index--)
{
    var index1 = index;
    var item = Models[index1];

    <GridRow Class="container">
        @if (index1 % 2 == 0)
        {
            <GridCol Span="12">
                <div class="div">
                    <a href="@item.Link" target="_blank">
                        <h1>@item.Title</h1>
                    </a>
                    <p>@item.Digest</p>
                </div>
            </GridCol>
            <GridCol Span="12">
                <Image Src="@item.Cover"/>
            </GridCol>
        }
        else
        {
            <GridCol Span="12">
                <Image Src="@item.Cover"/>
            </GridCol>
            <GridCol Span="12">
                <div class="div">
                    <a href="@item.Link" target="_blank">
                        <h1>@item.Title</h1>
                    </a>
                    <p>@item.Digest</p>
                </div>
            </GridCol>
        }
    </GridRow>
    <br/>
}

@code {

    private EventModel[] Models { get; set; } = Array.Empty<EventModel>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await using var context = await DbFactory.CreateDbContextAsync();
        Models = await context.Events.ToArrayAsync();
    }

}

<style>
    .container {
      background: rgba(255, 255, 255, 0.3);
      -webkit-backdrop-filter: blur(20px);
      backdrop-filter: blur(20px);
      box-shadow: inset 0 0 6px rgba(255, 255, 255, 0.3);
      width: 90%;
      padding: 10px;
      margin-bottom: 10px;
      margin-top: 10px;
      border-radius: 10px;
    
      animation: fade-in 1s ease-in-out;
    }
    .div{
      margin: 10px;  
    }
    p{
    font-size: 18px;
      color: #f5f5f7;
    }
</style>