@page "/NewCentre"
@using iOSClub.Share
@using iOSClub.Share.Data
@using iOSClub.Table.Models
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<SignContext> DbFactory
@inject NavigationManager Nav
@inject IWebHostEnvironment HostEnvironment

<!--suppress ALL -->

<Flex Justify="center" Align="center">
    <GridRow Class="block" Gutter="(20, 24)">
        <GridCol Xs="24" Sm="24" Md="12" Lg="12" Xl="8" Xxl="8">
            <a href="/Centre/PersonalData">
                <Card Hoverable Class="card">
                    <Image Style="height: 100px;width: 100px" Preview="false" Src="@(Member.Gender == "男" ? "Centre/男生.png" : "Centre/女生.png")"/>
                    <Title style="font-size: 36px;font-family: SF Pro SC, SF Pro Display, Helvetica Neue, sans-serif;">@Member.UserName</Title>
                    <Paragraph Type="secondary">ID :@Member.UserId</Paragraph>
                    <Paragraph Style="font-size: 16px" Strong>@MemberModel.IdentityDictionary[Member.Identity]</Paragraph>
                </Card>
            </a>
        </GridCol>
        <GridCol Xs="24" Sm="24" Md="12" Lg="12" Xl="16" Xxl="16">
            <AppleCard>
                <TitleTemplate>
                    <Title Level="2">iTool</Title>
                    <Paragraph Type="secondary">iOS Club出品的小工具</Paragraph>
                </TitleTemplate>
                <ContextTemplate>
                    @if (Tools.Length == 0)
                    {
                        <Empty Image="https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg" Style="padding: 20px" Description="@("社团还没加入iOS App")"/>
                    }
                    else
                    {
                        <Space Size=@(("8", "16")) Wrap>
                            @foreach (var item in Tools)
                            {
                                <SpaceItem>
                                    <Button OnClick="@(() => Nav.NavigateTo(item.Url))" Class="card" Style="padding: 0">
                                        <Image Preview="false" Src="@item.IconUrl"/>
                                        <Paragraph>@item.Name</Paragraph>
                                    </Button>
                                </SpaceItem>
                            }
                        </Space>
                    }
                </ContextTemplate>
            </AppleCard>
        </GridCol>
        @if (Member.Identity != "Member")
        {
            <GridCol Xs="24" Sm="24" Md="12" Lg="12" Xl="16" Xxl="16">
                <AppleCard>
                    <TitleTemplate>
                        <Title Level="2">我的任务</Title>
                        <Paragraph Type="secondary">iStaff 的任务</Paragraph>
                    </TitleTemplate>
                    <ContextTemplate>
                        @if (Staff == null || Staff.Tasks.Count == 0)
                        {
                            <Empty Image="https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg" Style="padding: 20px" Description="@("您的任务都已经完成了")"/>
                        }
                        else
                        {
                            <AntList DataSource="@Staff.Tasks">
                                <ListItem>
                                    <ListItemMeta>
                                        <TitleTemplate>
                                            <Space Align="center" Size="@("large")">
                                                <SpaceItem>
                                                    <h1>@context.Title</h1>
                                                </SpaceItem>
                                                <SpaceItem>
                                                    <Icon Type="team"/>
                                                    @context.Users.Count.ToString()
                                                </SpaceItem>
                                            </Space>
                                        </TitleTemplate>
                                        <DescriptionTemplate>
                                            <Text Type="secondary">@($"{context.StartTime} - {context.EndTime}")</Text>
                                            <Tag Color="@TaskColor(context)">@TaskString(context)</Tag>
                                        </DescriptionTemplate>
                                    </ListItemMeta>
                                </ListItem>
                            </AntList>
                        }
                    </ContextTemplate>
                </AppleCard>
            </GridCol>
            <GridCol Xs="24" Sm="24" Md="12" Lg="12" Xl="8" Xxl="8">
                <AppleCard>
                    <TitleTemplate>
                        <Title Level="2">社团资源</Title>
                        <Paragraph Type="secondary">iOS Club资源全览</Paragraph>
                    </TitleTemplate>
                    <ContextTemplate>
                        @if (Resources.Length == 0)
                        {
                            <Empty Image="https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg" Style="padding: 20px" Description="@("您的任务都已经完成了")"/>
                        }
                        else
                        {
                            <AntList DataSource="@Resources" Style="overflow: auto">
                                <ListItem>
                                    <ListItemMeta Title="@context.Name">
                                        <DescriptionTemplate>
                                            <Text Type="secondary">@context.Description</Text>
                                            @foreach (var s in context.Tag?.Split(",")!)
                                            {
                                                <Tag>@s</Tag>
                                            }
                                        </DescriptionTemplate>
                                    </ListItemMeta>
                                </ListItem>
                            </AntList>
                        }
                    </ContextTemplate>
                </AppleCard>
            </GridCol>
        }
        @if (Member.Identity.Contains("Minister") || Member.Identity == "President" || Member.Identity == "Founder")
        {
            <GridCol Xs="24" Sm="24" Md="12" Lg="12" Xl="8" Xxl="8">
                <a href="/Admin/MemberData">
                    <AppleCard>
                        <TitleTemplate>
                            <Title Level="2">数据中心</Title>
                            <Paragraph Type="secondary">展示社团数据</Paragraph>
                        </TitleTemplate>
                        <ContextTemplate>
                            <Flex Align="center">
                                <Statistic GroupSeparator=" " Title="当前成员" Value="@Total" TValue="int">
                                    <PrefixTemplate>
                                        <Icon Type="team" Theme="outline"/>
                                    </PrefixTemplate>
                                </Statistic>
                            </Flex>
                        </ContextTemplate>
                    </AppleCard>
                </a>
            </GridCol>
            <GridCol Xs="24" Sm="24" Md="12" Lg="12" Xl="16" Xxl="16">
                <a href="/Admin/Env">
                    <AppleCard>
                        <TitleTemplate>
                            <Title Level="2">服务器环境</Title>
                            <Paragraph Type="secondary">显示当前服务器环境</Paragraph>
                        </TitleTemplate>
                        <ContextTemplate>
                            <Flex Align="center" Justify="center" Style="height: 100%">
                                <Paragraph Type="secondary">当前储存路径: @HostEnvironment.WebRootPath</Paragraph>
                            </Flex>
                        </ContextTemplate>
                    </AppleCard>
                </a>
            </GridCol>
        }
    </GridRow>
</Flex>

@code
{
    [CascadingParameter] private MemberModel Member { get; set; } = new();

    private static string TaskColor(TaskModel task)
    {
        var today = DateTime.Today;
        var start = DateTime.Parse(task.StartTime);
        var end = DateTime.Parse(task.EndTime);
        if (today > end) return "red-inverse";
        if (start > today) return "blue-inverse";
        return task.Status ? "#87d068" : "#2db7f5";
    }

    private static string TaskString(TaskModel task)
    {
        var today = DateTime.Today;
        var start = DateTime.Parse(task.StartTime);
        var end = DateTime.Parse(task.EndTime);
        if (today > end) return "超时未完成";
        if (start > today) return "未开始";
        return task.Status ? "已完成" : "正在进行";
    }

    private ToolModel[] Tools { get; set; } = [];
    private StaffModel? Staff { get; set; }
    private ResourceModel[] Resources { get; set; } = [];
    private int Total { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await using var context = await DbFactory.CreateDbContextAsync();
        Staff = await context.Staffs
            .Include(x => x.Tasks)
            .FirstOrDefaultAsync(x => x.UserId == Member.UserId);
        Tools = await context.Tools.ToArrayAsync();
        Resources = await context.Resources.ToArrayAsync();
        Total = await context.Students.CountAsync();
        await base.OnInitializedAsync();
    }
}

<style>
    .ant-layout{
        background-image: linear-gradient(to bottom right, #ff6b6b, #7171ae, #10bce7);
        overflow: auto;
    }
    
    .ant-layout-content{
        min-height: 100vh;
    }
    
    .Layout-Header{
        background: rgba(255, 255, 255, 0.3);
        -webkit-backdrop-filter: blur(20px);
        backdrop-filter: blur(20px);
        box-shadow: inset 0 0 6px rgba(255, 255, 255, 0.3);
        padding-left: 10px;
        padding-right: 10px;
        margin: 10px;
        border-radius: 10px;
    }
    
    .card{
        border-radius: 20px;
        padding: 10px;
        height: 300px;
        background-color: #fff;
    }
    
    .card:hover{
        animation: CardDisplay 0.2s ease;
        transform: scale(1.02)
    }
    
    .card:not(:hover) {
        animation: CardDisplay2 0.2s ease;
    }
    
    .block{
        width: 80%;
        margin-top: 45px;
    }
    
</style>